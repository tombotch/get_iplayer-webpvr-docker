on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Test Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: github.event_name == 'pull_request'
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          load: true
          tags: app:test
      - name: Test image
        run: |
          docker run --rm --name test -p 1935:1935 -d app:test
          sleep 30
          curl http://localhost:1935
          docker stop test
  push:
    name: Push Docker image
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
      id-token: write
    if: github.event_name == 'push'
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.2
      - name: Log in to GitHub registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to conta.in.rs registry
        uses: docker/login-action@v3
        with:
          registry: conta.in.rs
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Get tags
        uses: docker/metadata-action@v5
        id: get-metadata
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/get_iplayer-webpvr
            conta.in.rs/get-iplayer/get_iplayer-webpvr
          tags: |
            type=match,pattern=v(.*),group=1
            type=raw,value=latest,enable={{ github.ref == 'refs/heads/master' }}
      - name: Get get_iplayer version
        id: get-version
        run: |
          VERSION=${{ steps.get-metadata.outputs.version }}
          IPLAYER_VERSION=v$VERSION
          [ "$VERSION" == "latest" ] && IPLAYER_VERSION=master
          echo "version=$IPLAYER_VERSION" >> "$GITHUB_OUTPUT"
      - name: Build & push image to registry
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          push: true
          build-args: |
            VERSION=${{ steps.get-version.outputs.version }}
          tags: ${{ steps.get-metadata.outputs.tags }} 
      - name: Sign image
        run: |
          IFS=$'\n'
          for TAG in $TAGS
          do
            cosign sign --yes "${TAG}@${DIGEST}"
          done
        env:
          TAGS: ${{ steps.get-metadata.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
