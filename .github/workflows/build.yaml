on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Test Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          load: true
          tags: app:test
      - name: Test image
        run: |
          docker run --rm --name test -p 1935:1935 -d app:test
          docker stop test
  push:
    name: Push Docker image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout branches
        uses: actions/checkout@master
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.2
      - name: Log in to registry
        run: |
          docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker login -u 'robot$github' -p ${{ secrets.HARBOR_PASSWORD }} conta.in.rs
      - name: Build & push image to registry
        id: build-and-push
        run: |
          IMAGE_NAME=get_iplayer-webpvr
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          ALT_IMAGE_ID=conta.in.rs/get-iplayer/$IMAGE_NAME
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          IPLAYER_VERSION=v$VERSION
          [ "$VERSION" == "latest" ] && IPLAYER_VERSION=master
          echo "IMAGE_ID=$IMAGE_ID" >> "$GITHUB_OUTPUT"
          echo "ALT_IMAGE_ID=$ALT_IMAGE_ID" >> "$GITHUB_OUTPUT"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          docker build -t $IMAGE_ID:$VERSION -t $ALT_IMAGE_ID:$VERSION --build-arg VERSION=$IPLAYER_VERSION .
          docker push $IMAGE_ID:$VERSION
          docker push $ALT_IMAGE_ID:$VERSION
      - name: Sign image
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY $IMAGE_ID:$VERSION
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY $ALT_IMAGE_ID:$VERSION
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          IMAGE_ID: ${{ steps.build-and-push.outputs.IMAGE_ID }}
          ALT_IMAGE_ID: ${{ steps.build-and-push.outputs.ALT_IMAGE_ID }}
          VERSION: ${{ steps.build-and-push.outputs.VERSION }}
